{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAa,EACbC,EAAY,EACZC,EAAS,EAEPC,EAASC,SAASC,cAAc,SAwCtC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA/CPL,EAAOa,iBAAiB,SAQxB,SAAuBC,GACK,UAAtBA,EAAMC,OAAOC,OACfnB,EAAaoB,OAAOH,EAAMC,OAAOG,QAET,SAAtBJ,EAAMC,OAAOC,OACflB,EAAYmB,OAAOH,EAAMC,OAAOG,QAER,WAAtBJ,EAAMC,OAAOC,OACfjB,EAASkB,OAAOH,EAAMC,OAAOG,O,IAfjClB,EAAOa,iBAAiB,UAExB,SAAwBC,GACtBA,EAAMK,iBAgBR,SAA0BC,EAAcC,EAAWC,GAEjD,IADA,IAAIjB,EAAQe,EACHG,EAAI,EAAGA,GAAKD,EAAgBC,IACnCpB,EAAcoB,EAAGlB,GACdmB,MAAK,SAAAN,GACJvB,EAAA8B,OAAOC,KACL,uBAA8CC,OAArBT,EAAMd,SAAS,QAAkBuB,OAAZT,EAAMb,MAAM,M,IAG7DuB,OAAM,SAAAV,GACLvB,EAAA8B,OAAOI,QACL,sBAA2CF,OAArBT,EAAMd,SAAS,QAAkBuB,OAAZT,EAAMb,MAAM,M,IAG7DA,GAASgB,C,CA7BXS,CAAiBjC,EAAYC,EAAWC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet firstDelay = 0;\nlet delayStep = 0;\nlet amount = 0;\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('input', onFormElInput);\nformEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(event) {\n  event.preventDefault();\n  generatePromises(firstDelay, delayStep, amount);\n}\n\nfunction onFormElInput(event) {\n  if (event.target.name === 'delay') {\n    firstDelay = Number(event.target.value);\n  }\n  if (event.target.name === 'step') {\n    delayStep = Number(event.target.value);\n  }\n  if (event.target.name === 'amount') {\n    amount = Number(event.target.value);\n  }\n}\n\nfunction generatePromises(initialDelay, delayStep, promisesAmount) {\n  let delay = initialDelay;\n  for (let i = 1; i <= promisesAmount; i++) {\n    createPromise(i, delay)\n      .then(value => {\n        Notify.info(\n          `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n        );\n      })\n      .catch(value => {\n        Notify.failure(\n          `❌ Rejected promise ${value.position} in ${value.delay}ms`\n        );\n      });\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","target","name","Number","value","preventDefault","initialDelay","delayStep1","promisesAmount","i","then","Notify","info","concat","catch","failure","$ce04d3a99e08e73b$var$generatePromises"],"version":3,"file":"03-promises.813ed298.js.map"}