{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAa,EACbC,EAAY,EACZC,EAAS,EAEb,MAAMC,EAASC,SAASC,cAAc,SAwCtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/CbL,EAAOa,iBAAiB,SAQxB,SAAuBC,GACK,UAAtBA,EAAMC,OAAOC,OACfnB,EAAaoB,OAAOH,EAAMC,OAAOG,QAET,SAAtBJ,EAAMC,OAAOC,OACflB,EAAYmB,OAAOH,EAAMC,OAAOG,QAER,WAAtBJ,EAAMC,OAAOC,OACfjB,EAASkB,OAAOH,EAAMC,OAAOG,O,IAfjClB,EAAOa,iBAAiB,UAExB,SAAwBC,GACtBA,EAAMK,iBAgBR,SAA0BC,EAAcC,EAAWC,GACjD,IAAIjB,EAAQe,EACZ,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAgBC,IACnCpB,EAAcoB,EAAGlB,GACdmB,MAAKN,IACJvB,EAAA8B,OAAOC,KACL,uBAAqBR,EAAId,eAAmBc,EAAEb,UAAc,IAG/DsB,OAAMT,IACLvB,EAAA8B,OAAOG,QACL,sBAAoBV,EAAEd,eAAmBc,EAAEb,UAAc,IAG/DA,GAASgB,C,CA7BXQ,CAAiBhC,EAAYC,EAAWC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet firstDelay = 0;\nlet delayStep = 0;\nlet amount = 0;\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('input', onFormElInput);\nformEl.addEventListener('submit', onFormElSubmit);\n\nfunction onFormElSubmit(event) {\n  event.preventDefault();\n  generatePromises(firstDelay, delayStep, amount);\n}\n\nfunction onFormElInput(event) {\n  if (event.target.name === 'delay') {\n    firstDelay = Number(event.target.value);\n  }\n  if (event.target.name === 'step') {\n    delayStep = Number(event.target.value);\n  }\n  if (event.target.name === 'amount') {\n    amount = Number(event.target.value);\n  }\n}\n\nfunction generatePromises(initialDelay, delayStep, promisesAmount) {\n  let delay = initialDelay;\n  for (let i = 1; i <= promisesAmount; i++) {\n    createPromise(i, delay)\n      .then(value => {\n        Notify.info(\n          `✅ Fulfilled promise ${value.position} in ${value.delay}ms`\n        );\n      })\n      .catch(value => {\n        Notify.failure(\n          `❌ Rejected promise ${value.position} in ${value.delay}ms`\n        );\n      });\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","target","name","Number","value","preventDefault","initialDelay","delayStep1","promisesAmount","i","then","Notify","info","catch","failure","$47d4ff9957288465$var$generatePromises"],"version":3,"file":"03-promises.09cd7529.js.map"}